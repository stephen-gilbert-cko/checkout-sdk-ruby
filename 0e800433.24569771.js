(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{52:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return i})),n.d(t,"Highlight",(function(){return u})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(71)),c={id:"tokens",title:"Tokens"},s={unversionedId:"tokens",id:"tokens",isDocsHomePage:!1,title:"Tokens",description:"export const Highlight = ({children, color}) => (",source:"@site/docs/tokens.md",permalink:"/checkout-sdk-ruby/tokens",sidebar:"someSidebar",previous:{title:"Sources",permalink:"/checkout-sdk-ruby/sources"}},i=[{value:'Request a token for <Highlight color="#25c2a0">Apple Pay</Highlight>',id:"request-a-token-for-apple-pay",children:[]},{value:'Request a token for <Highlight color="#25c2a0">Google Pay</Highlight>',id:"request-a-token-for-google-pay",children:[]},{value:'Request a token for <Highlight color="#25c2a0">raw card details</Highlight>',id:"request-a-token-for-raw-card-details",children:[]}],u=function(e){var t=e.children,n=e.color;return Object(a.b)("span",{style:{color:n,padding:"0.2rem"}},t)},p={rightToc:i,Highlight:u};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"You can find a list of request body parameters and possible outcomes ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://api-reference.checkout.com/#tag/Tokens"}),"here"),"."),Object(a.b)("h2",{id:"request-a-token-for-apple-pay"},"Request a token for ",Object(a.b)(u,{color:"#25c2a0",mdxType:"Highlight"},"Apple Pay")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'header_data = { "ephemeralPublicKey" => "XXX",\n                "publicKeyHash" => "XXX",\n                "transactionId" => "XXX" }\n\ntoken_request_source = CheckoutSdk::RequestToken.new\ntoken_request_source.type = "applepay"\ntoken_request_source.token_data_version = "EC_v1"\ntoken_request_source.token_data_data = "XXX"\ntoken_request_source.token_data_signature = "XXX"\ntoken_request_source.token_data_header = header_data\n\n# Send API call\nresponse = api_resource.request_token(token_request_source)\n\n# response parsing\nputs(response.data) # => {...}\nputs(response.body) # => "..."\n')),Object(a.b)("h2",{id:"request-a-token-for-google-pay"},"Request a token for ",Object(a.b)(u,{color:"#25c2a0",mdxType:"Highlight"},"Google Pay")),Object(a.b)("p",null,"const token = await cko.tokens.request({\n// type:\"googlepay\" is inferred\ntoken_data: {\nprotocolVersion: 'EC_v1',\nsignature: 'XXX',\nsignedMessage: 'XXX'\n}\n});"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'token_request_source = CheckoutSdk::RequestToken.new\ntoken_request_source.type = "googlepay"\ntoken_request_source.token_data_protocolVersion = "ECv1"\ntoken_request_source.token_data_signature = "XXX"\ntoken_request_source.token_data_signedMessage = "XXX"\n\n# Send API call\nresponse = api_resource.request_token(token_request_source)\n\n# response parsing\nputs(response.data) # => {...}\nputs(response.body) # => "..."\n')),Object(a.b)("h2",{id:"request-a-token-for-raw-card-details"},"Request a token for ",Object(a.b)(u,{color:"#25c2a0",mdxType:"Highlight"},"raw card details")),Object(a.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"If you do not have SAQ-D level PCI Compliance, this interaction can only be done in the Sandbox environment. This is in case you want to unit test your code and need a token to make a payment. In the Production environment, you need to use an integrated solution such as ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("a",Object(r.a)({parentName:"strong"},{href:"https://docs.checkout.com/quickstart/integrate/frames"}),"Frames"))," to generate the token for you."))),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ruby"}),'token_request_source = CheckoutSdk::RequestToken.new\ntoken_request_source.type = "card"\ntoken_request_source.card_number = "4242424242424242"\ntoken_request_source.card_expiry_month = 6\ntoken_request_source.card_expiry_year = 28\ntoken_request_source.card_cvv = "100"\n\n# Send API call\nresponse = api_resource.request_token(token_request_source)\n\n# response parsing\nputs(response.data) # => {...}\nputs(response.body) # => "..."\n')))}l.isMDXComponent=!0},71:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return g}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(n),b=r,g=l["".concat(c,".").concat(b)]||l[b]||d[b]||a;return n?o.a.createElement(g,s(s({ref:t},u),{},{components:n})):o.a.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var u=2;u<a;u++)c[u]=n[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);